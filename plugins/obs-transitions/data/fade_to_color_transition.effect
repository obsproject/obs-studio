uniform float4x4  ViewProj;
uniform texture2d tex;
uniform float     swp;
uniform float4    color;

sampler_state textureSampler {
	Filter    = Linear;
	AddressU  = Clamp;
	AddressV  = Clamp;
};

struct VertData {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

VertData VSDefault(VertData v_in)
{
	VertData vert_out;
	vert_out.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = v_in.uv;
	return vert_out;
}

float srgb_nonlinear_to_linear_channel(float u)
{
	return (u <= 0.04045) ? (u / 12.92) : pow(mad(u, 1. / 1.055, .055 / 1.055), 2.4);
}

float3 srgb_nonlinear_to_linear(float3 v)
{
	return float3(srgb_nonlinear_to_linear_channel(v.r), srgb_nonlinear_to_linear_channel(v.g), srgb_nonlinear_to_linear_channel(v.b));
}

float4 PSFadeToColor(VertData v_in) : TARGET
{
	float4 rgba = lerp(tex.Sample(textureSampler, v_in.uv), color, swp);
	return rgba;
}

technique FadeToColor
{
	pass
	{
		vertex_shader = VSDefault(v_in);
		pixel_shader  = PSFadeToColor(v_in);
	}
}
